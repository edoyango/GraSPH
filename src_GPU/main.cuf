program SPH

   use globvar, only: allocateGlobalArrays, deallocateGlobalArrays, scale_k, ntotal, nvirt,print_step, save_step, maxtimestep, cputime, output_time, test_time, maxinter_perp, ntotal, nvirt, nghos, parts, parts_d, niac, niac_d, pairs, pairs_d
   use param, only: skf

   use input_m, only: input, virt_part
   use kernel_m, only: kernel_k
   use summary_m, only: preamble, time_print, print_summary
   use time_integration_m, only: time_integration

   implicit none
   integer:: maxn

   !Printing preamble to screen
   call preamble

   ! setting k parameter for kernel radius (r = kh)
   scale_k = kernel_k(skf)

   call input(.false.)
   call virt_part(.false.)

   write (*, '(A24,1x,I9,1x,A19)') 'Total simulation size of', ntotal, 'physical particles.'
   write (*, '(A24,1x,I9,1x,A19)') '                        ', nvirt, 'virtual particles.'

   call allocateGlobalArrays()
   maxn = 2*ntotal+nvirt

   !Creat physical and virtual boundary particles
   call input(.true.)
   call virt_part(.true.)

   !Entering discretized time-integration loop
   call time_integration(scale_k,print_step, save_step, maxtimestep, cputime, output_time, test_time, maxinter_perp, maxn, ntotal, nvirt, nghos, parts, parts_d, niac, niac_d, pairs, pairs_d)

   !Printing post-amble to terminal
   call time_print
   call print_summary

   !Cleaning up
   call deallocateGlobalArrays

end
