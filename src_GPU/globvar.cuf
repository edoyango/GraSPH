module globvar
    
    use datatypes
    use cudafor
    
    implicit none
    
    ! particle array
    type(particles),allocatable,target,public:: parts(:)
    type(particles),allocatable,target,device,public:: parts_d(:)
    
    ! interaction array
    type(interactions),allocatable,public:: pairs(:,:)
    type(interactions),allocatable,device,public:: pairs_d(:,:)
    integer,allocatable,public:: niac(:)
    integer,allocatable,device:: niac_d(:)
    
    !global 1D variables
    integer,public:: ntotal,nvirt,nghos
    integer,public:: maxn,maxinter
    integer,public:: itimestep,maxtimestep,save_step,print_step
    real(f),public:: time=0_f
    real(f),public:: scale_k
    integer,parameter,public:: maxinter_perp = 135
    
    !global 1D variables (device)
    integer,device:: ntotal_d,nvirt_d,nghos_d
    integer,device:: maxinter_d
    real(f),device:: scale_k_d
    
    !timing
    real,public:: cputime,output_time=0.,test_time=0.
    
    public:: allocateGlobalArrays,deallocateGlobalArrays,initial_host2device

! subroutines to allocate and deallocate global arrays
contains
    
    !==============================================================================================================================
    subroutine allocateGlobalArrays
    
        implicit none
        
        maxn = ntotal+nvirt+int(0.2*ntotal)
        maxinter = maxinter_perp*maxn
        
        allocate( parts(maxn),parts_d(maxn) )
        allocate( pairs(maxinter_perp,maxn),pairs_d(maxinter_perp,maxn) )
        allocate( niac(maxn),niac_d(maxn) )
        
    end subroutine allocateGlobalArrays
    
       !==============================================================================================================================
    subroutine initial_host2device
        
        implicit none
        
        parts_d(:) = parts(:)
        ntotal_d = ntotal
        nvirt_d = nvirt
        nghos_d = 0
        scale_k_d = scale_k
        
    end subroutine initial_host2device
    
    !==============================================================================================================================
    subroutine deallocateGlobalArrays
    
        implicit none
        
        deallocate( parts,parts_d )
        deallocate( pairs,pairs_d )
        
    end subroutine deallocateGlobalArrays
    
end module globvar
