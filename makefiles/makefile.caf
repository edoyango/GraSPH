#FC=mpifort
#MAKE_FCFLAGS=-coarray=single $(FCFLAGS) -module obj# -fbacktrace -fimplicit-none -pedantic -Wall -Wextra -Jobj $(FCFLAGS) -lhdf5
#MAKE_FCFLAGS=-fcoarray=single -fbacktrace -fimplicit-none -pedantic -Wall -Wextra -Jobj $(FCFLAGS) -lhdf5
CDIR=common
SDIR=src_CAF# source file directory
ODIR=obj# directory to store .o, .mod, .OBJ_SERIAL files generated by compilation

FCFLAGS_INTEL_GENERAL=-module $(ODIR) -I$(ODIR) -traceback
FCFLAGS_GNU_GENERAL=-J$(ODIR) -I$(ODIR) -fbacktrace -fimplicit-none -pedantic -std=f2018
FCFLAGS_INTEL_SERIAL=-coarray=single
FCFLAGS_INTEL_CAF=-coarray -DPARALLEL
FCFLAGS_GNU_SERIAL=-fcoarray=single
FCFLAGS_GNU_CAF=-fcoarray=lib -DPARALLEL
FCFLAGS_INTEL_DEV=-warn all
FCFLAGS_GNU_DEV=-Wall -Wextra -Warray-temporaries -Waliasing -Wtabs
FCFLAGS_INTEL_OPT=-O3 -ipo -xhost
FCFLAGS_GNU_OPT=-O3 -flto -march=native -mtune=native
FCFLAGS_GNU_DEBUG=-Og -g -fcheck=all

ifndef compiler
	compiler=gnu
endif

ifndef mode
	mode=serial
endif

ifeq ($(compiler), gnu)
    FCFLAGS := $(FCFLAGS_GNU_GENERAL) $(FCFLAGS)
	ifeq ($(mode), serial)
        FCFLAGS:=$(FCFLAGS) $(FCFLAGS_GNU_SERIAL)
        LDFLAGS := $(LDFLAGS)#-lhdf5hl_fortran
    else ifeq ($(mode), caf)
        FCFLAGS:=$(FCFLAGS) $(FCFLAGS_GNU_CAF)
    endif
	ifdef extras
        ifeq ($(findstring dev,$(extras)),dev)
            FCFLAGS := $(FCFLAGS) $(FCFLAGS_GNU_DEV)
        endif
        ifeq ($(findstring opt,$(extras)),opt)
            FCFLAGS := $(FCFLAGS) $(FCFLAGS_GNU_OPT)
        endif
        ifeq ($(findstring debug,$(extras)),debug)
            FCFLAGS := $(FCFLAGS) $(FCFLAGS_GNU_DEBUG)
        endif
	endif
else ifeq ($(compiler), intel)
    FCFLAGS := $(FCFLAGS_INTEL_GENERAL) $(FCFLAGS)
    ifeq ($(mode), serial)
        FCFLAGS:=$(FCFLAGS) $(FCFLAGS_INTEL_SERIAL)
        LDFLAGS := $(LDFLAGS) -lhdf5hl_fortran
    else ifeq ($(mode), caf)
        FCFLAGS:=$(FCFLAGS) $(FCFLAGS_INTEL_CAF)
    endif
    ifdef extras
        ifeq ($(findstring dev,$(extras)),dev)
            FCFLAGS := $(FCFLAGS) $(FCFLAGS_INTEL_DEV)
        endif
        ifeq ($(findstring opt,$(extras)),opt)
            FCFLAGS := $(FCFLAGS) $(FCFLAGS_INTEL_OPT)
        endif
        ifeq ($(findstring debug,$(extras)),debug)
            FCFLAGS := $(FCFLAGS) $(FCFLAGS_INTEL_DEBUG)
        endif
        ifeq ($(findstring singlecaf,$(extras)),singlecaf)
            ifeq ($(mode),serial)
                FCFLAGS := $(FCFLAGS) -DPARALLEL
            endif
        endif
	endif
endif

OBJ=$(addprefix $(ODIR)/,\
param.caf.o \
datatypes.caf.o \
kernel_m.caf.o \
hdf5_parallel_io_helper_m.caf.o \
output_m.caf.o \
param_para.caf.o \
ORB_sr_m.caf.o \
ORB_m.caf.o \
summary_m.caf.o \
input_m.caf.o \
flink_list_m.caf.o \
material_rates_m.caf.o \
single_step_m.caf.o \
time_integration_m.caf.o \
main.caf.o \
)

sph: $(OBJ)
	$(FC) -o $@ $^ $(FCFLAGS) -lhdf5_fortran -lhdf5 $(LDFLAGS)

$(ODIR)/param.caf.o: \
$(ODIR)/%.caf.o: \
$(CDIR)/%.f90
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/hdf5_parallel_io_helper_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.F90 \
$(ODIR)/param.caf.o
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/datatypes.caf.o: \
$(ODIR)/%.caf.o: \
$(CDIR)/%.f90 \
$(ODIR)/param.caf.o
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/kernel_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.f90 \
$(ODIR)/param.caf.o
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/output_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.F90 \
$(addprefix $(ODIR)/,param.caf.o datatypes.caf.o hdf5_parallel_io_helper_m.caf.o)
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/ORB_sr_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.f90 \
$(addprefix $(ODIR)/,param.caf.o datatypes.caf.o param_para.caf.o)
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/ORB_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.F90 \
$(addprefix $(ODIR)/,param.caf.o datatypes.caf.o input_m.caf.o param_para.caf.o ORB_sr_m.caf.o)
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/summary_m.caf.o $(ODIR)/param_para.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.f90 \
$(ODIR)/param.caf.o $(ODIR)/datatypes.caf.o
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/input_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.F90 \
$(ODIR)/param.caf.o $(ODIR)/datatypes.caf.o
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/material_rates_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.f90 \
$(ODIR)/param.caf.o $(ODIR)/datatypes.caf.o
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/flink_list_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.f90 \
$(addprefix $(ODIR)/,param.caf.o datatypes.caf.o kernel_m.caf.o)
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/single_step_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.f90 \
$(addprefix $(ODIR)/,param.caf.o datatypes.caf.o material_rates_m.caf.o)
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/time_integration_m.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.F90 \
$(addprefix $(ODIR)/,param.caf.o datatypes.caf.o input_m.caf.o ORB_m.caf.o ORB_sr_m.caf.o output_m.caf.o summary_m.caf.o input_m.caf.o single_step_m.caf.o)
	$(FC) -c -o $@ $< $(FCFLAGS)

$(ODIR)/main.caf.o: \
$(ODIR)/%.caf.o: \
$(SDIR)/%.F90 \
$(addprefix $(ODIR)/,param.caf.o datatypes.caf.o summary_m.caf.o kernel_m.caf.o time_integration_m.caf.o)
	$(FC) -c -o $@ $< $(FCFLAGS)

clean:
	rm -f $(ODIR)/*.o
	rm -f $(ODIR)/*.obj
	rm -f $(ODIR)/*.mod
